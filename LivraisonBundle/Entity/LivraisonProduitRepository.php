<?php

namespace Newstore\LivraisonBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LivraisonProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivraisonProduitRepository extends EntityRepository {

    public function getLivraisonProduit() {
        $queryBuilder = $this->_em->createQueryBuilder()
                ->select('a')
                ->from($this->_entityName, 'a')
                ->groupBy('a.livraison');
        $query = $queryBuilder->getQuery();
        $resultats = $query->getResult();
        return $resultats;
    }

    public function getLivraisonGroupById($id) {
        $queryBuilder = $this->_em->createQueryBuilder()
                ->select('a')
                ->from($this->_entityName, 'a')
                ->where('a.livraison = ' . $id)
                ->groupBy('a.livraison');
        $query = $queryBuilder->getQuery();
        $resultats = $query->getResult();
        return $resultats;
    }


    public function getProduitsByLivraison($id) {
        $query =  $this->getEntityManager()->createQuery(
                'SELECT p '
                . 'FROM NewstoreProduitBundle:Produit p, NewstoreLivraisonBundle:LivraisonProduit qp '
                . 'WHERE p.id = qp.produit '
                . 'AND qp.livraison = ' . $id . '');
        return $query->getResult();
    }
    
    public function getQuantiteOfLivrainOfProduit($produit, $livraison){
        $query =  $this->getEntityManager()->createQuery(
                'SELECT qp.quantite '
                . 'FROM NewstoreLivraisonBundle:LivraisonProduit qp '
                . 'WHERE qp.produit = ' . $produit. ''
                . 'AND qp.livraison = ' . $livraison. '');
        return $query->getResult();
    }


    public function getProduitsByLivraisonWithQuantite($id) {
        $query =  $this->getEntityManager()->createQuery(
                'SELECT p, qp.quantite FROM NewstoreProduitBundle:Produit p, NewstoreLivraisonBundle:LivraisonProduit qp WHERE p.id = qp.produit AND qp.livraison = ' . $id . '');
        return $query->getResult();
    }
    
    public function deleteLivraisonProduit($id){
         $query =  $this->getEntityManager()->createQuery(
                'DELETE FROM NewstoreLivraisonBundle:LivraisonProduit qp, NewstoreLivraisonBundle:Livraison l WHERE qp.livraison = l.id AND qp.livraison = ' . $id . '');
        return $query->getResult();
    }
}
